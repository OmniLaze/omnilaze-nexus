/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ClerkRouteRouteImport } from './routes/clerk/route'
import { Route as AdminRouteRouteImport } from './routes/admin/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as AdminUsersRouteImport } from './routes/admin/users'
import { Route as AdminOrdersRouteImport } from './routes/admin/orders'
import { Route as AdminNotificationsRouteImport } from './routes/admin/notifications'
import { Route as AdminLoginRouteImport } from './routes/admin/login'
import { Route as AdminInviteCodesRouteImport } from './routes/admin/invite-codes'
import { Route as AdminDevopsRouteImport } from './routes/admin/devops'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as authSignUpRouteImport } from './routes/(auth)/sign-up'
import { Route as authSignIn2RouteImport } from './routes/(auth)/sign-in-2'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as authOtpRouteImport } from './routes/(auth)/otp'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as ClerkAuthenticatedRouteRouteImport } from './routes/clerk/_authenticated/route'
import { Route as ClerkauthRouteRouteImport } from './routes/clerk/(auth)/route'
import { Route as AdminSettingsRouteRouteImport } from './routes/admin/settings/route'
import { Route as AdminUsersIndexRouteImport } from './routes/admin/users/index'
import { Route as AdminTasksIndexRouteImport } from './routes/admin/tasks/index'
import { Route as AdminSettingsIndexRouteImport } from './routes/admin/settings/index'
import { Route as AdminHelpCenterIndexRouteImport } from './routes/admin/help-center/index'
import { Route as AdminChatsIndexRouteImport } from './routes/admin/chats/index'
import { Route as AdminAppsIndexRouteImport } from './routes/admin/apps/index'
import { Route as ClerkAuthenticatedUserManagementRouteImport } from './routes/clerk/_authenticated/user-management'
import { Route as ClerkauthSignUpRouteImport } from './routes/clerk/(auth)/sign-up'
import { Route as ClerkauthSignInRouteImport } from './routes/clerk/(auth)/sign-in'
import { Route as AdminSettingsNotificationsRouteImport } from './routes/admin/settings/notifications'
import { Route as AdminSettingsDisplayRouteImport } from './routes/admin/settings/display'
import { Route as AdminSettingsAppearanceRouteImport } from './routes/admin/settings/appearance'
import { Route as AdminSettingsAccountRouteImport } from './routes/admin/settings/account'

const ClerkRouteRoute = ClerkRouteRouteImport.update({
  id: '/clerk',
  path: '/clerk',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminUsersRoute = AdminUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminOrdersRoute = AdminOrdersRouteImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminNotificationsRoute = AdminNotificationsRouteImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminLoginRoute = AdminLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminInviteCodesRoute = AdminInviteCodesRouteImport.update({
  id: '/invite-codes',
  path: '/invite-codes',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminDevopsRoute = AdminDevopsRouteImport.update({
  id: '/devops',
  path: '/devops',
  getParentRoute: () => AdminRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignUpRoute = authSignUpRouteImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignIn2Route = authSignIn2RouteImport.update({
  id: '/(auth)/sign-in-2',
  path: '/sign-in-2',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const authOtpRoute = authOtpRouteImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRouteImport,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const ClerkAuthenticatedRouteRoute = ClerkAuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => ClerkRouteRoute,
} as any)
const ClerkauthRouteRoute = ClerkauthRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => ClerkRouteRoute,
} as any)
const AdminSettingsRouteRoute = AdminSettingsRouteRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminUsersIndexRoute = AdminUsersIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminUsersRoute,
} as any)
const AdminTasksIndexRoute = AdminTasksIndexRouteImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminSettingsIndexRoute = AdminSettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminSettingsRouteRoute,
} as any)
const AdminHelpCenterIndexRoute = AdminHelpCenterIndexRouteImport.update({
  id: '/help-center/',
  path: '/help-center/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminChatsIndexRoute = AdminChatsIndexRouteImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminAppsIndexRoute = AdminAppsIndexRouteImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const ClerkAuthenticatedUserManagementRoute =
  ClerkAuthenticatedUserManagementRouteImport.update({
    id: '/user-management',
    path: '/user-management',
    getParentRoute: () => ClerkAuthenticatedRouteRoute,
  } as any)
const ClerkauthSignUpRoute = ClerkauthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => ClerkauthRouteRoute,
} as any)
const ClerkauthSignInRoute = ClerkauthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => ClerkauthRouteRoute,
} as any)
const AdminSettingsNotificationsRoute =
  AdminSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AdminSettingsRouteRoute,
  } as any)
const AdminSettingsDisplayRoute = AdminSettingsDisplayRouteImport.update({
  id: '/display',
  path: '/display',
  getParentRoute: () => AdminSettingsRouteRoute,
} as any)
const AdminSettingsAppearanceRoute = AdminSettingsAppearanceRouteImport.update({
  id: '/appearance',
  path: '/appearance',
  getParentRoute: () => AdminSettingsRouteRoute,
} as any)
const AdminSettingsAccountRoute = AdminSettingsAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AdminSettingsRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/clerk': typeof ClerkAuthenticatedRouteRouteWithChildren
  '/admin/settings': typeof AdminSettingsRouteRouteWithChildren
  '/clerk/': typeof ClerkauthRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/admin/devops': typeof AdminDevopsRoute
  '/admin/invite-codes': typeof AdminInviteCodesRoute
  '/admin/login': typeof AdminLoginRoute
  '/admin/notifications': typeof AdminNotificationsRoute
  '/admin/orders': typeof AdminOrdersRoute
  '/admin/users': typeof AdminUsersRouteWithChildren
  '/admin/': typeof AdminIndexRoute
  '/admin/settings/account': typeof AdminSettingsAccountRoute
  '/admin/settings/appearance': typeof AdminSettingsAppearanceRoute
  '/admin/settings/display': typeof AdminSettingsDisplayRoute
  '/admin/settings/notifications': typeof AdminSettingsNotificationsRoute
  '/clerk/sign-in': typeof ClerkauthSignInRoute
  '/clerk/sign-up': typeof ClerkauthSignUpRoute
  '/clerk/user-management': typeof ClerkAuthenticatedUserManagementRoute
  '/admin/apps': typeof AdminAppsIndexRoute
  '/admin/chats': typeof AdminChatsIndexRoute
  '/admin/help-center': typeof AdminHelpCenterIndexRoute
  '/admin/settings/': typeof AdminSettingsIndexRoute
  '/admin/tasks': typeof AdminTasksIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/clerk': typeof ClerkAuthenticatedRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/admin/devops': typeof AdminDevopsRoute
  '/admin/invite-codes': typeof AdminInviteCodesRoute
  '/admin/login': typeof AdminLoginRoute
  '/admin/notifications': typeof AdminNotificationsRoute
  '/admin/orders': typeof AdminOrdersRoute
  '/admin': typeof AdminIndexRoute
  '/admin/settings/account': typeof AdminSettingsAccountRoute
  '/admin/settings/appearance': typeof AdminSettingsAppearanceRoute
  '/admin/settings/display': typeof AdminSettingsDisplayRoute
  '/admin/settings/notifications': typeof AdminSettingsNotificationsRoute
  '/clerk/sign-in': typeof ClerkauthSignInRoute
  '/clerk/sign-up': typeof ClerkauthSignUpRoute
  '/clerk/user-management': typeof ClerkAuthenticatedUserManagementRoute
  '/admin/apps': typeof AdminAppsIndexRoute
  '/admin/chats': typeof AdminChatsIndexRoute
  '/admin/help-center': typeof AdminHelpCenterIndexRoute
  '/admin/settings': typeof AdminSettingsIndexRoute
  '/admin/tasks': typeof AdminTasksIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/clerk': typeof ClerkRouteRouteWithChildren
  '/admin/settings': typeof AdminSettingsRouteRouteWithChildren
  '/clerk/(auth)': typeof ClerkauthRouteRouteWithChildren
  '/clerk/_authenticated': typeof ClerkAuthenticatedRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-in-2': typeof authSignIn2Route
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/admin/devops': typeof AdminDevopsRoute
  '/admin/invite-codes': typeof AdminInviteCodesRoute
  '/admin/login': typeof AdminLoginRoute
  '/admin/notifications': typeof AdminNotificationsRoute
  '/admin/orders': typeof AdminOrdersRoute
  '/admin/users': typeof AdminUsersRouteWithChildren
  '/admin/': typeof AdminIndexRoute
  '/admin/settings/account': typeof AdminSettingsAccountRoute
  '/admin/settings/appearance': typeof AdminSettingsAppearanceRoute
  '/admin/settings/display': typeof AdminSettingsDisplayRoute
  '/admin/settings/notifications': typeof AdminSettingsNotificationsRoute
  '/clerk/(auth)/sign-in': typeof ClerkauthSignInRoute
  '/clerk/(auth)/sign-up': typeof ClerkauthSignUpRoute
  '/clerk/_authenticated/user-management': typeof ClerkAuthenticatedUserManagementRoute
  '/admin/apps/': typeof AdminAppsIndexRoute
  '/admin/chats/': typeof AdminChatsIndexRoute
  '/admin/help-center/': typeof AdminHelpCenterIndexRoute
  '/admin/settings/': typeof AdminSettingsIndexRoute
  '/admin/tasks/': typeof AdminTasksIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/clerk'
    | '/admin/settings'
    | '/clerk/'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/admin/devops'
    | '/admin/invite-codes'
    | '/admin/login'
    | '/admin/notifications'
    | '/admin/orders'
    | '/admin/users'
    | '/admin/'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/settings/display'
    | '/admin/settings/notifications'
    | '/clerk/sign-in'
    | '/clerk/sign-up'
    | '/clerk/user-management'
    | '/admin/apps'
    | '/admin/chats'
    | '/admin/help-center'
    | '/admin/settings/'
    | '/admin/tasks'
    | '/admin/users/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/clerk'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/admin/devops'
    | '/admin/invite-codes'
    | '/admin/login'
    | '/admin/notifications'
    | '/admin/orders'
    | '/admin'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/settings/display'
    | '/admin/settings/notifications'
    | '/clerk/sign-in'
    | '/clerk/sign-up'
    | '/clerk/user-management'
    | '/admin/apps'
    | '/admin/chats'
    | '/admin/help-center'
    | '/admin/settings'
    | '/admin/tasks'
    | '/admin/users'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/clerk'
    | '/admin/settings'
    | '/clerk/(auth)'
    | '/clerk/_authenticated'
    | '/(auth)/forgot-password'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/admin/devops'
    | '/admin/invite-codes'
    | '/admin/login'
    | '/admin/notifications'
    | '/admin/orders'
    | '/admin/users'
    | '/admin/'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/settings/display'
    | '/admin/settings/notifications'
    | '/clerk/(auth)/sign-in'
    | '/clerk/(auth)/sign-up'
    | '/clerk/_authenticated/user-management'
    | '/admin/apps/'
    | '/admin/chats/'
    | '/admin/help-center/'
    | '/admin/settings/'
    | '/admin/tasks/'
    | '/admin/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  ClerkRouteRoute: typeof ClerkRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authSignIn2Route: typeof authSignIn2Route
  authSignUpRoute: typeof authSignUpRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/clerk': {
      id: '/clerk'
      path: '/clerk'
      fullPath: '/clerk'
      preLoaderRoute: typeof ClerkRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/orders': {
      id: '/admin/orders'
      path: '/orders'
      fullPath: '/admin/orders'
      preLoaderRoute: typeof AdminOrdersRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/notifications': {
      id: '/admin/notifications'
      path: '/notifications'
      fullPath: '/admin/notifications'
      preLoaderRoute: typeof AdminNotificationsRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/login': {
      id: '/admin/login'
      path: '/login'
      fullPath: '/admin/login'
      preLoaderRoute: typeof AdminLoginRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/invite-codes': {
      id: '/admin/invite-codes'
      path: '/invite-codes'
      fullPath: '/admin/invite-codes'
      preLoaderRoute: typeof AdminInviteCodesRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/devops': {
      id: '/admin/devops'
      path: '/devops'
      fullPath: '/admin/devops'
      preLoaderRoute: typeof AdminDevopsRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/clerk/_authenticated': {
      id: '/clerk/_authenticated'
      path: ''
      fullPath: '/clerk'
      preLoaderRoute: typeof ClerkAuthenticatedRouteRouteImport
      parentRoute: typeof ClerkRouteRoute
    }
    '/clerk/(auth)': {
      id: '/clerk/(auth)'
      path: '/'
      fullPath: '/clerk/'
      preLoaderRoute: typeof ClerkauthRouteRouteImport
      parentRoute: typeof ClerkRouteRoute
    }
    '/admin/settings': {
      id: '/admin/settings'
      path: '/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminSettingsRouteRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/'
      fullPath: '/admin/users/'
      preLoaderRoute: typeof AdminUsersIndexRouteImport
      parentRoute: typeof AdminUsersRoute
    }
    '/admin/tasks/': {
      id: '/admin/tasks/'
      path: '/tasks'
      fullPath: '/admin/tasks'
      preLoaderRoute: typeof AdminTasksIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/settings/': {
      id: '/admin/settings/'
      path: '/'
      fullPath: '/admin/settings/'
      preLoaderRoute: typeof AdminSettingsIndexRouteImport
      parentRoute: typeof AdminSettingsRouteRoute
    }
    '/admin/help-center/': {
      id: '/admin/help-center/'
      path: '/help-center'
      fullPath: '/admin/help-center'
      preLoaderRoute: typeof AdminHelpCenterIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/chats/': {
      id: '/admin/chats/'
      path: '/chats'
      fullPath: '/admin/chats'
      preLoaderRoute: typeof AdminChatsIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/apps/': {
      id: '/admin/apps/'
      path: '/apps'
      fullPath: '/admin/apps'
      preLoaderRoute: typeof AdminAppsIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/clerk/_authenticated/user-management': {
      id: '/clerk/_authenticated/user-management'
      path: '/user-management'
      fullPath: '/clerk/user-management'
      preLoaderRoute: typeof ClerkAuthenticatedUserManagementRouteImport
      parentRoute: typeof ClerkAuthenticatedRouteRoute
    }
    '/clerk/(auth)/sign-up': {
      id: '/clerk/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/clerk/sign-up'
      preLoaderRoute: typeof ClerkauthSignUpRouteImport
      parentRoute: typeof ClerkauthRouteRoute
    }
    '/clerk/(auth)/sign-in': {
      id: '/clerk/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/clerk/sign-in'
      preLoaderRoute: typeof ClerkauthSignInRouteImport
      parentRoute: typeof ClerkauthRouteRoute
    }
    '/admin/settings/notifications': {
      id: '/admin/settings/notifications'
      path: '/notifications'
      fullPath: '/admin/settings/notifications'
      preLoaderRoute: typeof AdminSettingsNotificationsRouteImport
      parentRoute: typeof AdminSettingsRouteRoute
    }
    '/admin/settings/display': {
      id: '/admin/settings/display'
      path: '/display'
      fullPath: '/admin/settings/display'
      preLoaderRoute: typeof AdminSettingsDisplayRouteImport
      parentRoute: typeof AdminSettingsRouteRoute
    }
    '/admin/settings/appearance': {
      id: '/admin/settings/appearance'
      path: '/appearance'
      fullPath: '/admin/settings/appearance'
      preLoaderRoute: typeof AdminSettingsAppearanceRouteImport
      parentRoute: typeof AdminSettingsRouteRoute
    }
    '/admin/settings/account': {
      id: '/admin/settings/account'
      path: '/account'
      fullPath: '/admin/settings/account'
      preLoaderRoute: typeof AdminSettingsAccountRouteImport
      parentRoute: typeof AdminSettingsRouteRoute
    }
  }
}

interface AdminSettingsRouteRouteChildren {
  AdminSettingsAccountRoute: typeof AdminSettingsAccountRoute
  AdminSettingsAppearanceRoute: typeof AdminSettingsAppearanceRoute
  AdminSettingsDisplayRoute: typeof AdminSettingsDisplayRoute
  AdminSettingsNotificationsRoute: typeof AdminSettingsNotificationsRoute
  AdminSettingsIndexRoute: typeof AdminSettingsIndexRoute
}

const AdminSettingsRouteRouteChildren: AdminSettingsRouteRouteChildren = {
  AdminSettingsAccountRoute: AdminSettingsAccountRoute,
  AdminSettingsAppearanceRoute: AdminSettingsAppearanceRoute,
  AdminSettingsDisplayRoute: AdminSettingsDisplayRoute,
  AdminSettingsNotificationsRoute: AdminSettingsNotificationsRoute,
  AdminSettingsIndexRoute: AdminSettingsIndexRoute,
}

const AdminSettingsRouteRouteWithChildren =
  AdminSettingsRouteRoute._addFileChildren(AdminSettingsRouteRouteChildren)

interface AdminUsersRouteChildren {
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
}

const AdminUsersRouteChildren: AdminUsersRouteChildren = {
  AdminUsersIndexRoute: AdminUsersIndexRoute,
}

const AdminUsersRouteWithChildren = AdminUsersRoute._addFileChildren(
  AdminUsersRouteChildren,
)

interface AdminRouteRouteChildren {
  AdminSettingsRouteRoute: typeof AdminSettingsRouteRouteWithChildren
  AdminDevopsRoute: typeof AdminDevopsRoute
  AdminInviteCodesRoute: typeof AdminInviteCodesRoute
  AdminLoginRoute: typeof AdminLoginRoute
  AdminNotificationsRoute: typeof AdminNotificationsRoute
  AdminOrdersRoute: typeof AdminOrdersRoute
  AdminUsersRoute: typeof AdminUsersRouteWithChildren
  AdminIndexRoute: typeof AdminIndexRoute
  AdminAppsIndexRoute: typeof AdminAppsIndexRoute
  AdminChatsIndexRoute: typeof AdminChatsIndexRoute
  AdminHelpCenterIndexRoute: typeof AdminHelpCenterIndexRoute
  AdminTasksIndexRoute: typeof AdminTasksIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminSettingsRouteRoute: AdminSettingsRouteRouteWithChildren,
  AdminDevopsRoute: AdminDevopsRoute,
  AdminInviteCodesRoute: AdminInviteCodesRoute,
  AdminLoginRoute: AdminLoginRoute,
  AdminNotificationsRoute: AdminNotificationsRoute,
  AdminOrdersRoute: AdminOrdersRoute,
  AdminUsersRoute: AdminUsersRouteWithChildren,
  AdminIndexRoute: AdminIndexRoute,
  AdminAppsIndexRoute: AdminAppsIndexRoute,
  AdminChatsIndexRoute: AdminChatsIndexRoute,
  AdminHelpCenterIndexRoute: AdminHelpCenterIndexRoute,
  AdminTasksIndexRoute: AdminTasksIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface ClerkauthRouteRouteChildren {
  ClerkauthSignInRoute: typeof ClerkauthSignInRoute
  ClerkauthSignUpRoute: typeof ClerkauthSignUpRoute
}

const ClerkauthRouteRouteChildren: ClerkauthRouteRouteChildren = {
  ClerkauthSignInRoute: ClerkauthSignInRoute,
  ClerkauthSignUpRoute: ClerkauthSignUpRoute,
}

const ClerkauthRouteRouteWithChildren = ClerkauthRouteRoute._addFileChildren(
  ClerkauthRouteRouteChildren,
)

interface ClerkAuthenticatedRouteRouteChildren {
  ClerkAuthenticatedUserManagementRoute: typeof ClerkAuthenticatedUserManagementRoute
}

const ClerkAuthenticatedRouteRouteChildren: ClerkAuthenticatedRouteRouteChildren =
  {
    ClerkAuthenticatedUserManagementRoute:
      ClerkAuthenticatedUserManagementRoute,
  }

const ClerkAuthenticatedRouteRouteWithChildren =
  ClerkAuthenticatedRouteRoute._addFileChildren(
    ClerkAuthenticatedRouteRouteChildren,
  )

interface ClerkRouteRouteChildren {
  ClerkauthRouteRoute: typeof ClerkauthRouteRouteWithChildren
  ClerkAuthenticatedRouteRoute: typeof ClerkAuthenticatedRouteRouteWithChildren
}

const ClerkRouteRouteChildren: ClerkRouteRouteChildren = {
  ClerkauthRouteRoute: ClerkauthRouteRouteWithChildren,
  ClerkAuthenticatedRouteRoute: ClerkAuthenticatedRouteRouteWithChildren,
}

const ClerkRouteRouteWithChildren = ClerkRouteRoute._addFileChildren(
  ClerkRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  ClerkRouteRoute: ClerkRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authSignIn2Route: authSignIn2Route,
  authSignUpRoute: authSignUpRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
